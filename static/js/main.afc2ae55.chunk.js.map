{"version":3,"sources":["components/violation.js","components/grid.js","components/active-toggle.js","components/search.js","App.js","index.js"],"names":["Violation","athlete","style","overflowWrap","className","Grid","violations","loading","length","tableLayout","slice","map","a","i","key","Toggle","onCheck","htmlFor","cursor","id","type","value","onChange","e","target","checked","Search","setViolations","useState","query","setQuery","active","setActive","options","shouldSort","threshold","location","distance","minMatchCharLength","keys","useEffect","performSearch","then","onActiveToggle","Promise","resolve","Fuse","search","x","item","today","moment","filter","isAfter","fontSize","onKeyUp","event","csv","csvtojson","App","result","setResult","setIsLoading","randomString","Math","random","toString","substring","url","fetch","resp","text","bannedAthletes","fromString","json","push","splice","get","marginTop","src","overflowX","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afc2ae55.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Violation = ({ athlete }) => {\n  return (\n    <>\n      <td style={{ overflowWrap: \"break-word\" }}>{athlete[\"Name\"]}</td>\n      <td className=\"rm-small\" style={{ overflowWrap: \"break-word\" }}>{athlete[\"Date of Birth\"]}</td>\n      <td style={{ overflowWrap: \"break-word\" }}>{athlete[\"Nationality\"]}</td>\n      <td style={{ overflowWrap: \"break-word\" }}>{athlete[\"Sanction\"]}</td>\n      <td style={{ overflowWrap: \"break-word\" }}>{athlete[\"Ineligibility until\"]}</td>\n      <td className=\"rm-small\" style={{ overflowWrap: \"break-word\" }}>{athlete[\"Description\"]}</td>\n    </>\n  );\n};\n\nexport default Violation;","import React from \"react\";\n\n\nimport Violation from \"./violation\";\n\n\nconst Grid = ({ violations, loading }) => {\n\n  if (loading) {\n    return <span>Loading ...</span>;\n  }\n\n  return violations.length > 0\n    ? (<table style={{ tableLayout: \"fixed\" }}>\n      <thead>\n      <tr>\n        <th style={{ overflowWrap: \"break-word\" }}>Name</th>\n        <th className=\"rm-small\" style={{ overflowWrap: \"break-word\" }}>Date of Birth</th>\n        <th style={{ overflowWrap: \"break-word\" }}>Nationality</th>\n        <th style={{ overflowWrap: \"break-word\" }}>Sanction</th>\n        <th style={{ overflowWrap: \"break-word\" }}>Ineligibility until</th>\n        <th className=\"rm-small\" style={{ overflowWrap: \"break-word\" }}>Description</th>\n      </tr>\n      </thead>\n      <tbody>\n      {violations.slice(0, 100).map((a, i) =>\n        <tr key={i}>\n          <Violation athlete={a}/>\n        </tr>\n      )}\n      </tbody>\n    </table>)\n    : <span> No results </span>;\n};\n\nexport default Grid;\n\n","import React from \"react\";\n\nconst Toggle = ({ onCheck }) => {\n  return (\n    <label htmlFor=\"active\" style={{ cursor: \"pointer\" }}>\n      <input id=\"active\" type=\"checkbox\" value=\"Active Suspensions\" onChange={e => onCheck(e.target.checked)}/>\n      &nbsp;Active suspensions only\n    </label>\n  );\n};\n\nexport default Toggle;","import React, { useEffect, useState } from \"react\";\nimport Fuse from \"fuse.js\";\nimport moment from \"moment\";\nimport Toggle from \"./active-toggle\";\nimport { violations } from \"../App\";\n\nconst Search = ({ setViolations }) => {\n\n  let [query, setQuery] = useState(\"\");\n  let [active, setActive] = useState(false);\n\n  let options = {\n    shouldSort: true,\n    threshold: 0.1,\n    location: 0,\n    distance: 100,\n    minMatchCharLength: 1,\n    keys: [\n      \"Name\"\n    ]\n  };\n\n  useEffect(() => {\n    performSearch(violations, query)\n      .then(violations => onActiveToggle(violations, active))\n      .then(violations => setViolations(violations));\n  }, [query, active]);\n\n  const performSearch = (violations, query) => {\n    return new Promise(resolve => {\n      if (query === \"\") {\n        return resolve(violations);\n      }\n\n      let fuse = new Fuse(violations, options); // \"list\" is the item array\n      let result = fuse.search(query);\n      resolve(result.map(x => x.item));\n    });\n  };\n\n  const onActiveToggle = (violations, active) => {\n    return new Promise(resolve => {\n      if (active) {\n        const today = moment();\n        const activeSuspensions = violations.filter(x => {\n          const until = moment(x[\"Ineligibility until\"], \"DD/MM/YYYY\");\n          return until.isAfter(today);\n        });\n        return resolve(activeSuspensions);\n      }\n      resolve(violations);\n    });\n  };\n\n\n  return (\n    <form>\n      <fieldset>\n        <h1>\n          Search for violations\n        </h1>\n        <input style={{ fontSize: \"1.5rem\" }} type=\"text\" id=\"search\" onKeyUp={event => setQuery(event.target.value)}/>\n        <Toggle onCheck={e => setActive(!active)}/>\n      </fieldset>\n    </form>\n  );\n};\n\nexport default Search;","import React, { useEffect, useState } from \"react\";\nimport Grid from \"./components/grid\";\nimport Search from \"./components/search\";\nimport csvtojson from \"csvtojson\";\n\nconst csv = csvtojson();\n\nexport const violations = [];\n\nfunction App() {\n\n  let [result, setResult] = useState([]);\n  let [_, setIsLoading] = useState(false);\n\n\n  useEffect(() => {\n\n    const get = async () => {\n      //http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript\n      const randomString = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n\n      try {\n        setIsLoading(true);\n        const url = `/banned-athletes.csv?${randomString}`;\n        const resp = await fetch(url);\n        const bannedAthletes = await resp.text();\n        const json = await csv.fromString(bannedAthletes);\n        violations.push(...json);\n        setResult(json);\n        setIsLoading(false);\n      } catch (e) {\n        violations.splice(0, violations.length);\n        setResult([]);\n      }\n    };\n\n    get();\n\n  }, []);\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\" style={{ marginTop: \"20px\" }}>\n        <div className=\"row\">\n          <div className=\"column\">\n            <img src=\"/logo-large.png\" />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"column\">\n            <Search setViolations={setResult}/>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div style={{ overflowX: \"auto\" }}>\n            <div className=\"column\">\n              <Grid violations={result}/>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}